version: '3.7'
services:
  coverage:
    image: bobcat-linker
    build:
      context: .
      cache_from:
        - bobcat-linker
        - $IMAGES_DOMAIN/bobcat-linker
    command: yarn test-and-report
    environment:
      COVERALLS_REPO_TOKEN: 

  deploy:
    image: bobcat-linker
    build:
      context: .
      cache_from:
        - bobcat-linker
        - $IMAGES_DOMAIN/bobcat-linker
    command: yarn deploy --stage=${STAGE} --region=${REGION}
    environment:
      LAMBDA_ROLE:
      AWS_ACCESS_KEY_ID:
      AWS_SECRET_ACCESS_KEY:
      REGION:
      STAGE:
      REST_API_ID:
      REST_API_ROOT_RESOURCE_ID:
      REST_API_NAMESPACE_RESOURCE_ID:
      S3_BUCKET:
      # LAMBDA SECRETS
      WORLDCAT_API_KEY:

  tf:
    image: lambda-deploy
    build:
      context: ./terraform
    command: ["terraform", "apply", "-auto-approve"]
    env_file: test.env
    environment:
      BACKEND_CONFIG: test.backend
      # TF_LOG: DEBUG
      # AWS_ACCESS_KEY_ID:
      # AWS_SECRET_ACCESS_KEY:
      # TF_VAR_lambda_exec_arn:
      # TF_VAR_apigw_id:
      # TF_VAR_apigw_root_resource_id:
      # TF_VAR_apigw_execution_arn:
      # TF_VAR_lambda_version:

  zip:
    image: lambda-build
    build: 
      context: .
      dockerfile: Dockerfile
    command: sh -c 'cat .lambdafiles | xargs zip -r -9 -q bobcat-linker.zip'
    # aws s3 cp bobcat-linker.zip s3://nyulits-web-lambdas-example-1/v1.0.0/bobcat-linker.zip
    volumes:
      - ./:/app